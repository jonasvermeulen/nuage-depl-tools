---
- hosts: localhost 
  gather_facts: False 


  tasks:
    - name: Deploy VSD on EC2
      ec2: 
       key_name: "{{ aws.sshkey }}"
       instance_type: "{{ item.instance_type }}"
       image: "{{ item.image }}"
       wait: yes
       group: default
       exact_count: "{{ item.count }}"
       count_tag: 
         Name: "{{ item.name }}"
       region: "{{ aws.region }}"
       volumes: 
        - device_name: /dev/sda
          volume_size: 100
          delete_on_termination: True
       vpc_subnet_id: "{{ item.subnet }}"
       instance_tags:
        Name: "{{ item.name }}"
      with_items:
       - { name: vsd, image: ami-8997afe0, instance_type: m3.xlarge, count: 1, subnet: "{{ vsd.subnet }}", user: root }
      register: ec2

#    - name: Add new instance to host group
#      add_host: name={{ item.private_ip }} dnshostname={{ item.private_ip }} groupname=vsd ansible_ssh_user=root
#      with_items: ec2.instances

#    - name: Wait for SSH to come up
#      wait_for: host={{ item.private_ip }} port=22 delay=60 timeout=320 state=started
#      with_items: ec2.instances

    - name: Deploy VMs on EC2
      ec2:
       key_name: "{{ aws.sshkey }}"
       instance_type: "{{ item.instance_type }}"
       image: "{{ item.image }}"
       wait: yes
       group: default
       exact_count: "{{ item.count }}"
       count_tag:
         Name: "{{ item.name }}"
       region: "{{ aws.region }}"
       vpc_subnet_id: "{{ item.subnet }}"
       instance_tags:
        Name: "{{ item.name }}"
       user_data: "{{ lookup('template', 'templates/ec2_user_data') }}"
      with_items:
       - { name: vschost, image: ami-6d1c2007, instance_type: t2.medium, count: 1, subnet: "{{ vsd.subnet }}", user: centos }
       - { name: osctrl, image: ami-6d1c2007, instance_type: t2.medium, count: 1, subnet: "{{ vsd.subnet }}", user: centos }
       - { name: oscomp, image: ami-6d1c2007, instance_type: t2.medium, count: 2, subnet: "{{ vsd.subnet }}", user: centos }
      register: ec2

    - name: Add new instance to host group
      add_host: name={{ item.private_ip }} dnshostname={{ item.private_ip }} groupname=others 
      with_items: ec2.instances


